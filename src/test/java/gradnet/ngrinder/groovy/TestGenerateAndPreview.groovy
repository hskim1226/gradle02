package gradnet.ngrinder.groovy

import HTTPClient.HTTPResponse
import HTTPClient.NVPair
import net.grinder.plugin.http.HTTPRequest
import net.grinder.script.GTest
import net.grinder.scriptengine.groovy.junit.GrinderRunner
import net.grinder.scriptengine.groovy.junit.annotation.BeforeProcess
import net.grinder.scriptengine.groovy.junit.annotation.BeforeThread
import org.junit.FixMethodOrder
import org.junit.Test
import org.junit.runner.RunWith
import org.junit.runners.MethodSorters

import static net.grinder.script.Grinder.grinder
import static org.hamcrest.Matchers.is
import static org.junit.Assert.assertThat

/**
 * A simple example using the HTTP plugin that shows the retrieval of a
 * single page via HTTP.
 *
 * This script is auto generated by ngrinder.
 *
 * @author ${userName}
 */
@RunWith(GrinderRunner)
@FixMethodOrder(MethodSorters.NAME_ASCENDING)
class TestGenerateAndPreview {

    public static GTest test;
    public static HTTPRequest request;

    // This method is executed once per a process.
    @BeforeProcess
    public static void beforeClass() {
//        test = new GTest(1, "${name}");
        test = new GTest(1, "Test Basis Save");
        request = new HTTPRequest();
        test.record(request);
        grinder.logger.info("before process.");
    }

    // This method is executed once per a thread.
    @BeforeThread
    public void beforeThread() {
        grinder.statistics.delayReports=true;
        grinder.logger.info("before thread.");
    }

    // This method is continuously executed until you stop the test
    @Test
    public void test0LoginAndMyList(){
//        HTTPResponse result = request.GET("http://localhost:8080/yonsei");
//        HTTPResponse result = request.POST("http://www.gradnet.co.kr/yonsei/j_spring_security_check.do",
//        HTTPResponse result = request.POST("http://localhost:8080/yonsei/j_spring_security_check.do",
//        HTTPResponse result1 = request.POST("http://apexsoft-svr2:8080/yonsei/j_spring_security_check.do",
//            nvs([
//                "j_username":"Abc333",
//                "j_password":"Abc333"
//            ])
//        )
        HTTPResponse result2 = request.POST("http://apexsoft-svr2:8080/yonsei/application/showlist" + "?nc=" + Math.random()*10000)

        // TODO : 로그인페이지가 302로 돌아옴. 테스트 용으로 인증 안타는 router 설정 필요
        System.err.println(result2)
        if (
//            result1.statusCode == 301 || result1.statusCode == 302 ||
            result2.statusCode == 301 || result2.statusCode == 302
        ) {
            grinder.logger.warn("The response may cached, code : {}.", result2.statusCode);
        } else {
            assertThat(result2.statusCode, is(200));
        }
    }

    @Test
    public void test1DocumentEdit(){
        HTTPResponse result1 = request.POST("http://apexsoft-svr2:8080/yonsei/application/academy/edit" + "?nc=" + Math.random()*10000)

        if (
            result1.statusCode == 301 || result1.statusCode == 302
        ) {
            grinder.logger.warn("The response may cached, code : {}.", result1.statusCode);
        } else {
            assertThat(result1.statusCode, is(200));
        }
    }

    def nvs(def map) {
        def nvs = []
        map.each {
            key, value ->  nvs.add(new NVPair(key, value))
        }
        return nvs as NVPair[]
    }
}
